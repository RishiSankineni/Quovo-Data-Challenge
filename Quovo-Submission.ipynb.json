{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "test.csv\n",
      "train.csv\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load in \n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the \"../input/\" directory.\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n",
    "\n",
    "from subprocess import check_output\n",
    "print(check_output([\"ls\", \"../input\"]).decode(\"utf8\"))\n",
    "\n",
    "# Any results you write to the current directory are saved as output."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import nltk\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from nltk.corpus import stopwords\n",
    "from nltk import word_tokenize, ngrams\n",
    "from sklearn import ensemble\n",
    "from sklearn.model_selection import KFold\n",
    "from sklearn.metrics import log_loss\n",
    "import xgboost as xgb\n",
    "\n",
    "eng_stopwords = set(stopwords.words('english'))\n",
    "color = sns.color_palette()\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "pd.options.mode.chained_assignment = None  # default='warn'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2142, 6)\n",
      "(516, 4)\n"
     ]
    }
   ],
   "source": [
    "train_df = pd.read_csv('../input/train.csv')\n",
    "test_df = pd.read_csv('../input/test.csv')\n",
    "print(train_df.shape)\n",
    "print(test_df.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>description_x</th>\n",
       "      <th>description_y</th>\n",
       "      <th>ticker_x</th>\n",
       "      <th>ticker_y</th>\n",
       "      <th>same_security</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>first trust dow jones internet</td>\n",
       "      <td>first trust dj internet idx</td>\n",
       "      <td>FDN</td>\n",
       "      <td>FDN</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>schwab intl large company index etf</td>\n",
       "      <td>schwab strategic tr fundamental intl large co ...</td>\n",
       "      <td>FNDF</td>\n",
       "      <td>FNDF</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>vanguard small cap index adm</td>\n",
       "      <td>vanguard small-cap index fund inst</td>\n",
       "      <td>VSMAX</td>\n",
       "      <td>VSCIX</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>duke energy corp new com new isin #us4 sedol #...</td>\n",
       "      <td>duke energy corp new com new isin #us26441c204...</td>\n",
       "      <td>DUK</td>\n",
       "      <td>DUK</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>visa inc class a</td>\n",
       "      <td>visa inc.</td>\n",
       "      <td>V</td>\n",
       "      <td>V</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0                                      description_x  \\\n",
       "0           0                     first trust dow jones internet   \n",
       "1           1                schwab intl large company index etf   \n",
       "2           2                       vanguard small cap index adm   \n",
       "3           3  duke energy corp new com new isin #us4 sedol #...   \n",
       "4           4                                   visa inc class a   \n",
       "\n",
       "                                       description_y ticker_x ticker_y  \\\n",
       "0                        first trust dj internet idx      FDN      FDN   \n",
       "1  schwab strategic tr fundamental intl large co ...     FNDF     FNDF   \n",
       "2                 vanguard small-cap index fund inst    VSMAX    VSCIX   \n",
       "3  duke energy corp new com new isin #us26441c204...      DUK      DUK   \n",
       "4                                          visa inc.        V        V   \n",
       "\n",
       "  same_security  \n",
       "0          True  \n",
       "1          True  \n",
       "2         False  \n",
       "3          True  \n",
       "4          True  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "train_df.rename(columns ={'description_x':'question1','description_y':'question2','same_security':'is_similar'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>question1</th>\n",
       "      <th>question2</th>\n",
       "      <th>ticker_x</th>\n",
       "      <th>ticker_y</th>\n",
       "      <th>is_similar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>first trust dow jones internet</td>\n",
       "      <td>first trust dj internet idx</td>\n",
       "      <td>FDN</td>\n",
       "      <td>FDN</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>schwab intl large company index etf</td>\n",
       "      <td>schwab strategic tr fundamental intl large co ...</td>\n",
       "      <td>FNDF</td>\n",
       "      <td>FNDF</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>vanguard small cap index adm</td>\n",
       "      <td>vanguard small-cap index fund inst</td>\n",
       "      <td>VSMAX</td>\n",
       "      <td>VSCIX</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>duke energy corp new com new isin #us4 sedol #...</td>\n",
       "      <td>duke energy corp new com new isin #us26441c204...</td>\n",
       "      <td>DUK</td>\n",
       "      <td>DUK</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>visa inc class a</td>\n",
       "      <td>visa inc.</td>\n",
       "      <td>V</td>\n",
       "      <td>V</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0                                          question1  \\\n",
       "0           0                     first trust dow jones internet   \n",
       "1           1                schwab intl large company index etf   \n",
       "2           2                       vanguard small cap index adm   \n",
       "3           3  duke energy corp new com new isin #us4 sedol #...   \n",
       "4           4                                   visa inc class a   \n",
       "\n",
       "                                           question2 ticker_x ticker_y  \\\n",
       "0                        first trust dj internet idx      FDN      FDN   \n",
       "1  schwab strategic tr fundamental intl large co ...     FNDF     FNDF   \n",
       "2                 vanguard small-cap index fund inst    VSMAX    VSCIX   \n",
       "3  duke energy corp new com new isin #us26441c204...      DUK      DUK   \n",
       "4                                          visa inc.        V        V   \n",
       "\n",
       "  is_similar  \n",
       "0       True  \n",
       "1       True  \n",
       "2      False  \n",
       "3       True  \n",
       "4       True  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>test_id</th>\n",
       "      <th>description_x</th>\n",
       "      <th>description_y</th>\n",
       "      <th>same_security</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>semtech corp</td>\n",
       "      <td>semtech corporation</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>vanguard mid cap index</td>\n",
       "      <td>vanguard midcap index - a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>spdr gold trust gold shares</td>\n",
       "      <td>spdr gold trust spdr gold shares</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>vanguard total bond index adm</td>\n",
       "      <td>vanguard total bond market index</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>oakmark international fund class i</td>\n",
       "      <td>oakmark international cl i</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   test_id                       description_x  \\\n",
       "0        0                        semtech corp   \n",
       "1        1              vanguard mid cap index   \n",
       "2        2         spdr gold trust gold shares   \n",
       "3        3       vanguard total bond index adm   \n",
       "4        4  oakmark international fund class i   \n",
       "\n",
       "                      description_y  same_security  \n",
       "0               semtech corporation            NaN  \n",
       "1         vanguard midcap index - a            NaN  \n",
       "2  spdr gold trust spdr gold shares            NaN  \n",
       "3  vanguard total bond market index            NaN  \n",
       "4        oakmark international cl i            NaN  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test_df.rename(columns={'description_x':'question1','description_y':'question2','same_security':'is_similar'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>test_id</th>\n",
       "      <th>question1</th>\n",
       "      <th>question2</th>\n",
       "      <th>is_similar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>semtech corp</td>\n",
       "      <td>semtech corporation</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>vanguard mid cap index</td>\n",
       "      <td>vanguard midcap index - a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>spdr gold trust gold shares</td>\n",
       "      <td>spdr gold trust spdr gold shares</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>vanguard total bond index adm</td>\n",
       "      <td>vanguard total bond market index</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>oakmark international fund class i</td>\n",
       "      <td>oakmark international cl i</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   test_id                           question1  \\\n",
       "0        0                        semtech corp   \n",
       "1        1              vanguard mid cap index   \n",
       "2        2         spdr gold trust gold shares   \n",
       "3        3       vanguard total bond index adm   \n",
       "4        4  oakmark international fund class i   \n",
       "\n",
       "                          question2  is_similar  \n",
       "0               semtech corporation         NaN  \n",
       "1         vanguard midcap index - a         NaN  \n",
       "2  spdr gold trust spdr gold shares         NaN  \n",
       "3  vanguard total bond market index         NaN  \n",
       "4        oakmark international cl i         NaN  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAfoAAAEICAYAAAC3TzZbAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAHDNJREFUeJzt3XucXWV56PHfNIGWhCATGE2MHrD1+KDiUaSAFSJYQBHF\nWi5euJRbQYsKQbGCVSBeoF4oIhcPgSgEpQeJBwGrxIYCJ0TByFHx1kdRoZUEM5ohDSYmmWT6x1qB\nzTgzWZnZe/bMmt/389mfvfe7Lu8zfFh59vuud71vR19fH5IkqZ7+qN0BSJKk1jHRS5JUYyZ6SZJq\nzEQvSVKNmeglSaqxye0OoBW6u9f4KIEkacLo6prWMdg2W/SSJNWYiV6SpBoz0UuSVGMmekmSasxE\nL0lSjZnoJUmqMRO9JEk1ZqKXJKnGRmXCnIjYE7gVuDQzr4iI7YDrgecDa4CjM7MnIo4D5gCbgXmZ\nOb/c9zpgN2ATcHJm/mI04pYkabxreYs+IqYClwN3NhSfBnRn5r7ATcDscr/zgUOAg4CzI2I6cCzw\neGYeAHwMuLjVMUuSVBej0aJfDxwOvL+h7AjgAoDMnAcQEX8JLMvM1eX3pcD+wMHAgvK4xcDnRiFm\nSWPIZUuuancIUlOcNfuMUa+z5Yk+M3uB3ohoLN4deF1EfAJ4DDgDmAF0N+yzEpjZWJ6ZmyOiLyK2\nz8wNg9XZ2TmFyZMnNfXvkNQ+Xs+qi66uaaNeZ7sWtekAMjPnRsQHgfOA7w6wz2DHDqmnZ+0Iw5M0\nlvT2bmp3CFJTdHevacl5h/oB0a5R978G7ik/LwJeDCynaL1vMasse7K8HJjXMVRrXpIkPaVdif7r\nwGHl572BBO4H9omInSNiR4r780uAbwDHlPseAdw1yrFKkjRutbzrPiL2Bi6huC+/MSKOphhJf1lE\nnAo8AZyYmesi4lyKFn4fMDczV0fETcChEXEvxcC+k1odsyRJddHR19fX7hiarrt7Tf3+KGkCc9S9\n6qJVo+67uqYNOn7NmfEkSaoxE70kSTVmopckqcZM9JIk1ZiJXpKkGjPRS5JUYyZ6SZJqzEQvSVKN\nmeglSaoxE70kSTVmopckqcZM9JIk1ZiJXpKkGjPRS5JUYyZ6SZJqzEQvSVKNmeglSaqxyaNRSUTs\nCdwKXJqZVzSUvxa4IzM7yu/HAXOAzcC8zJwfEdsB1wG7AZuAkzPzF6MRtyRJ413LW/QRMRW4HLiz\nX/mfAOcBKxr2Ox84BDgIODsipgPHAo9n5gHAx4CLWx2zJEl1MRpd9+uBw4Hl/co/AFwJbCi/7wcs\ny8zVmbkOWArsDxwM3FLus7gskyRJFbS86z4ze4HeiHiyLCJeALw0M8+PiE+WxTOA7oZDVwIzG8sz\nc3NE9EXE9pm5gUF0dk5h8uRJTf5LJLWL17Pqoqtr2qjXOSr36AdwKXDmVvbp2MbyJ/X0rN3mgCSN\nXb29m9odgtQU3d1rWnLeoX5AjPqo+4iYBewBfDEi7gNmRsQ9FF37Mxp2nVWWPVleDszrGKo1L0mS\nnjLqLfrMfBT4sy3fI+LhzDwwInYAro2InYFeinvxc4CdgGOARcARwF2jHbMkSeNVyxN9ROwNXALs\nDmyMiKOBIzNzVeN+mbkuIs6lSOh9wNzMXB0RNwGHRsS9FAP7Tmp1zJIk1UVHX19fu2Nouu7uNfX7\no6QJ7LIlV7U7BKkpzpp9RkvO29U1bdDxa86MJ0lSjZnoJUmqMRO9JEk1VinRl4+1bfn8/Ij4s6H2\nlyRJY8NWE31EvBO4qfz8d8B9wKKIOLvFsUmSpBGq0qI/E/jb8vN5wGuBlzSUSZKkMarKc/QbMnNV\nROwFrM/MBwAa566XJEljU5VEvyYiTgCOAr4EEBEvAja2MjBJkjRyVbruT6OYevZXFOvBA/wj8L5W\nBSVJkppjqy36zPwR8OaI6AB2AdZm5htbHpkkSRqxKqPup0fEzcDvgR+WZZdGxCtaHZwkSRqZKl33\nNwLfoVgqtqcs+2fg060KSpIkNUeVRP/8zPx4ZvZQrCpHZn4bGHyVe0mSNCZUSfRrI+KFjQUR8Twc\ndS9J0phX5fG6DwH3RcRdwMyI+BIwm2I0viRJGsO22qLPzFuBlwGLgE8A/wLslZlfbXFskiRphKqM\nut8OOBK4OjMvBr4OnBQR27c6OEmSNDJVuu7nA1OAy4ENwDqKue7nAydUqSQi9gRuBS7NzCsi4rnA\n54HtKO71H5+Zj0XEccAcYDMwLzPnlz80rgN2AzYBJ2fmL6r/iZIkTVxVBuPtm5lHZ+YGgMxcAxwP\n7FulgoiYSvEj4c6G4o9SJPIDgVuA95T7nQ8cAhwEnB0R04Fjgccz8wCKmfkurlKvJEmqlug7IuJZ\n/cqeS7XeAID1wOHA8oayM4Avl5+7KWbc2w9YlpmrM3MdsBTYHziY4scAwOKyTJIkVVAlWX8MeDAi\nlgKPA13AK4HTq1SQmb1Ab+Nqd5n5O4CImAS8E/gwxYQ83Q2HrgRmNpZn5uaI6IuI7bf0MAyks3MK\nkydPqhKepHHA61l10dU1+lPQVJnrfkFE3AO8BtgV+Bbwjsx8dCQVl0n+BuDfMvPOiDi23y4dgxw6\nWPmTenrWjiQ0SWNMb++mdocgNUV395qWnHeoHxBVuu6hGDD3IHAP8CNgt4h45Qjj+jzws8ycW35f\nTtF632JWWfZkeTkwr2Oo1rwkSXrKVlv0EfEp4N3AYxSj4bfoA/50OJWWo+s3ZOYFDcX3A9dGxM5A\nL8W9+DnATsAxFM/xHwHcNZw6JUmaiKrco38bsHtmrhhOBRGxN3AJsDuwMSKOBp4J/D4i7i53+3Fm\nnhER51Ik9D5gbmaujoibgEMj4l6KgX0nDScOSZImoiqJ/lfDTfIAmfkAxeNyVfZdCCzsV7YJOHm4\n9UuSNJFVmjAnIm6gWK52deOGzPxmS6KSJElNUSXRn1e+H9CvfNj36CVJ0uio8njd80YjEEmS1HyV\nZreLiMMpFraZkpnHRsRrgHsz0wfWJUkaw6qsXnce8BHgBxTT1ALsA1zdwrgkSVITVJkw5zTggMy8\njGL1OoCLgD9vWVSSJKkpqiT6jeULigF4UGEaWkmS1H5VEv0i4GsR8SZgh/J+/ZfLckmSNIZVSfTn\nAEsoHrPbALyPYs7797UwLkmS1ARVRt0fkZkfoRiQJ0mSxpEqLfoPlavGSZKkcaZKi/5O4NsRcSew\nqnFDZl7UkqgkSVJTVEn004HvAbuUry36Bt5dkiSNFVUS/dWZeV/LI5EkSU1X5R79/JZHIUmSWqJK\ni/6WiPga8DX+8B79jS2JSpIkNUWVRL9/+X5Uv/I+ijXqtyoi9gRuBS7NzCsi4rnADcAkYAVwQmau\nj4jjgDnAZmBeZs4vR/xfB+wGbAJOzsxfVKlXkqSJrsoyta8eSQURMRW4nGL0/hYfBq7MzJsj4iLg\nlIhYAJwP7EsxMc+yiLgFOAJ4PDOPK1fNuxh4y0hikiRpothqoo+IeYNty8zTK9SxHjgceH9D2UHA\nO8rPt1PMvpfAssxcXda7lKI34WBgQbnvYuBzFeqUJElU67p/tN/3TorE/aUqFWRmL9AbEY3FUzNz\nffl5JTATmAF0N+zzB+WZuTki+iJi+8zcwCA6O6cwefKkKuFJGge8nlUXXV3TRr3OKl33c/uXRcRH\ngeubFMNgK+Fta/mTenrWDj8aSWNOb++mdocgNUV395qWnHeoHxBVHq8byG+BPYZ5LMATEbFD+XkW\nsLx8zWjY5w/Ky4F5HUO15iVJ0lOq3KO/hqfPgjcJ2BN4ZAT1LqYYxf+F8v0O4H7g2ojYGeiluD8/\nB9gJOIZiWdwjgLtGUK8kSRNKlXv0v+r3fRPwTeDmKhVExN7AJcDuwMaIOBo4DrguIt5O8YPh+szc\nGBHnUiT0PmBuZq6OiJuAQyPiXoqBfSdVqVeSJEFHX9/Wp6yPiD/PzO+Un6cBLx7L0+J2d69xHn6p\nRi5bclW7Q5Ca4qzZZ7TkvF1d0wYdv7bVe/QRcQ6wsOGe+g7Agoh4X5PikyRJLVJlMN7fAi/JzHUA\nmbkS2As4tZWBSZKkkauS6LcHftevbCNFy16SJI1hVQbjfQW4OyIWAo8DuwJvo5irXpIkjWFVJsx5\nT7nYzOEUSf43wKcy86ZWBydJkkamSoseIDPzi/DUqPvWhSRJkprFUfeSJNWYo+4lSaoxR91LklRj\njrqXJKnGqo66Px54HY66lyRpXKk66v5bQAIrM3Mkq9ZJkqRRNGSij4gTgIuAZwKrgF0i4hHg3Mz8\n8ijEJ0mSRmDQwXgRcSQwF3gHsENmzgT+BDgb+HhEvGF0QpQkScM1VIv+74E3ZeaDWwoyczPw1bJV\nfw3w1RbHJ0mSRmCox+t2akzyjTLzB8AzWhOSJElqlqES/XaDbYiIjqG2S5KksWGorvvvR8RpmXnN\nANvOAr433EojYkdgAdAJ/DHFWIAfUzybPwlYAZyQmevLBXXmAJuBeZk5f7j1SpI00QyV6D8A3BMR\nsynuxXcDzwaOBPYFXjWCek+iWCjnvIh4NvBvFI/wXZmZN0fERcApEbEAOL+sbwOwLCJuycxVI6hb\nkqQJY9Cu+8z8KfBy4DHgvcA84F3A94EXZeYvR1Dvb4Bdys+d5feDgNvKstuBQ4D9gGWZubqca38p\nsP8I6pUkaUIZ8jn6zFxBMfq+qTLz/0TESRHxEEWifz1wW2auL3dZCcwEZlD0JNCvfEidnVOYPHlS\nk6OW1C5ez6qLrq5po15n1ZnxmqqcUvc/MvOwiHgp0P++e8cghw5W/jQ9PWtHEp6kMaa3d1O7Q5Ca\nort7TUvOO9QPiCqr17XC/sAigMz8PsW9/981rHk/C1hevmY0HLelXJIkVTDUzHid5fv0FtT7EMX9\ndyJiN+AJ4F+Bo8rtRwF3APcD+0TEzuVI/f2BJS2IR5KkWhqqRX9f+X5vC+q9Gtg9Iu4BbqSYZvcC\n4MSIWAJMB64vB+CdS9H6XwzMzczVLYhHkqRaGuoe/bpyqttnRcRPB9ohM18wnEoz8wngzQNsOnSA\nfRcCC4dTjyRJE91Qif5VwEuBLwCnjU44kiSpmQZN9Jn5X8CSiDggM/8zInanWK72165JL0nS+FDl\n8bquiFhMMcHNamB6RPwn8NbM/HFLo5MkSSNSJdFfCZyXmf93S0FEvA34LHBgqwKTJEkjV+U5+mc0\nJnmAzPxnoKs1IUmSpGapkujXRcQrGgsiYj/A6eckSRrjqnTdvxe4rbwv3wPsCjyLgR+PkyRJY8hW\nE31m3h0Rz6OYya4L+DXw7cy0RS9J0hhXaVGbzPwdxZrxkiRpHGnXojaSJGkUmOglSaqxrSb6iDhz\nNAKRJEnNV6VFf+yWJWslSdL4UmUw3oPAgxFxP7CqcUNmnt6SqCRJUlNUSfSPAte2OhBJktR8VZ6j\nnwsQER3ALpn5m5ZHJUmSmqLKYLzpEXEz8Hvgh2XZp/tPiytJksaeKl33NwJ3AacD32wo+www7GQf\nEccBfw/0AudTjAW4AZgErABOyMz15X5zgM3AvMycP9w6JUmaaKqMun9+Zn48M3uAPoDM/DYwbbiV\nRsQuwAXAAcAbgL8CPgxcmZmzgYeAUyJiKsWPgEOAg4CzI2L6cOuVJGmiqZLo10bECxsLyrnvN46g\n3kOAxZm5JjNXlKP3DwJuK7ffXu6zH7AsM1dn5jpgKbD/COqVJGlCqdJ1/yHgvoi4C5gZEV8CZgOn\njaDe3YEpEXEb0AlcCEzNzPXl9pXATGAG0N1w3JbyIXV2TmHy5EkjCE/SWOL1rLro6hp2Z/iwVRl1\nf2tEvAw4DLgfWA6cmZmPjaDeDmAX4K+B3SjGAHT02z7YcVvV0+PCelKd9PZuancIUlN0d69pyXmH\n+gFRda77HYFNFAPitgeeMcKYfg18MzN7M/PnwBpgTUTsUG6fRfGDYjlFq55+5ZIkqYIqj9d9BLib\nokW/B/B6YGlEfGAE9X4D+MuI+KNyYN6OwGLgqHL7UcAdFD0I+0TEzhGxI8X9+SUjqFeSpAmlyj36\nvwH2yMwn75VHxDOBbwMXDafSzHw0IhYC95VF7waWAQsi4u3AI8D1mbkxIs4FFlGM+J+bmauHU6ck\nSRNRlUT/28YkX+rm6YPktllmXg1c3a/40AH2WwgsHEldkiRNVIMm+oh4Zfnxloi4BfgiRXKfDrwV\nuKn14UmSpJEYqkX/xX7fX9bv+z7Ap5objiRJaqZBE31mPm80A5EkSc231Xv0EbEbcArwbIp56J+U\nmae0KK4x6bIlV7U7BKkpzpp9RrtDkDRKqgzG+xfgJ8APKJ6llyRJ40SVRD8pM49peSSSJKnpqsyM\n94WIOKFh1jpJkjROVGnR9wCfBa6LiC1lHUBfZrrShCRJY1iVRH8B8Ba8Ry9J0rhTJdH/HPh6Zm5u\ndTCSJKm5qiT6W4HbIuJ2ilXmnpSZN7YkKkmS1BRVEv1h5ftb+5X3ASZ6SZLGsK0m+sx89WgEIkmS\nmq/KzHjzBtuWmac3NxxJktRMVZ6jf7Tfay1wELCydWFJkqRmqNJ1P7d/WUR8FLi+JRFJkqSmqTIY\nbyC/BfYYaeXlbHs/BD4C3AncQLFwzgrghMxcHxHHAXOAzcC8zJw/0nolSZooqtyjv4ZihP0Wk4A9\ngUeaUP8HgVXl5w8DV2bmzRFxEXBKRCwAzgf2BTYAyyLilsxcNfDpJElSoyot+l/1+74J+CZw80gq\njog9gBdRrI4HxX3/d5SfbwfOARJYlpmry2OWAvuX2yVJ0lYM6x59k1wCvAs4sfw+NTPXl59XAjOB\nGUB3wzFbyofU2TmFyZObPw1/K84ptUNX17R2h7BNvPZUF+249gZN9BFxF0/vsu+vLzMPHk6lEfE3\nwLcy85cNC+U06hjk0MHKn6anZ+1wwtqq3l6n+lc9dHev2fpOY4jXnuqiVdfeUD8ghmrRXzhI+cxy\n2/bDjgheD/xpRLwBeA6wHngiInbIzHXALGB5+ZrRcNws4L4R1CtJ0oQyaKLPzHsav0fE9sB7Kbrb\nrwD+abiVZuZbGs57IfAw8ErgKOAL5fsdwP3AtRGxM9BLcX9+znDrlSRpoqn0eF1EHAl8ArgH2Dsz\nH2tBLBcACyLi7RQj+q/PzI0RcS6wiOI2wtwtA/MkSdLWDZnoI+KlwGXl12My87vNDiAzL2z4eugA\n2xcCC5tdryRJE8FQg/GuAQ4EzsvML49eSJIkqVmGatGfWr7fHBH9R993UIy695kXSZLGsKEG41VZ\n8EaSJI1hJnNJkmrMRC9JUo2Z6CVJqjETvSRJNWailySpxkz0kiTVmIlekqQaM9FLklRjJnpJkmrM\nRC9JUo2Z6CVJqjETvSRJNWailySpxkz0kiTV2FDr0bdURHwCmF3GcDGwDLgBmASsAE7IzPURcRww\nB9gMzMvM+W0KWZKkcactLfqIeDWwZ2b+BXAY8Gngw8CVmTkbeAg4JSKmAucDhwAHAWdHxPR2xCxJ\n0njUrq77/wccU35+HJhKkchvK8tup0ju+wHLMnN1Zq4DlgL7j26okiSNX23pus/MTcDvyq+nAl8D\nXpuZ68uylcBMYAbQ3XDolvIhdXZOYfLkSc0LuNSKc0rt0NU1rd0hbBOvPdVFO669tt2jB4iIv6JI\n9K8BftawqWOQQwYrf5qenrUjjGxgvb2bWnJeabR1d69pdwjbxGtPddGqa2+oHxBtG3UfEa8F/gF4\nXWauBp6IiB3KzbOA5eVrRsNhW8olSVIF7RqM9wzgk8AbMnNVWbwYOKr8fBRwB3A/sE9E7BwRO1Lc\nn18y2vFKkjRetavr/i3ArsCXImJL2YnAtRHxduAR4PrM3BgR5wKLgD5gbtn6lyRJFbRrMN48YN4A\nmw4dYN+FwMKWByVJUg05M54kSTVmopckqcZM9JIk1ZiJXpKkGjPRS5JUYyZ6SZJqzEQvSVKNmegl\nSaoxE70kSTVmopckqcZM9JIk1ZiJXpKkGjPRS5JUYyZ6SZJqzEQvSVKNmeglSaoxE70kSTU2ud0B\nVBERlwKvAPqAszJzWZtDkiRpXBjzLfqIOBD4n5n5F8CpwGfaHJIkSePGmE/0wMHAVwAy8ydAZ0Ts\n1N6QJEkaH8ZD1/0M4IGG791l2X8NdkBX17SOVgTy0SPf34rTStoKrz1p+MZDi76/liRxSZLqaDwk\n+uUULfgtng2saFMskiSNK+Mh0X8DOBogIl4OLM/MNe0NSZKk8aGjr6+v3TFsVUT8I/AqYDPwzsz8\nfptDkiRpXBgXiV6SJA3PeOi6lyRJw2SilySpxsbDc/Qa5yJid+AHPH0+hO9l5pwB9r0beFdm/nB0\nopPqLyIuAfameIJpKvBzYFVmHtnWwDQqTPQaLZmZB7U7CGkiysz3AkTEScCemXlOeyPSaDLRqy0i\nYjJwPfAcihbGhZn51YbtewFXAevL11uATcDngU6K/3ffnZkPjnLoUi1ExEHAOcCOwHuBRZm5a7lt\nIXAFRS+c19w45z16tct04BuZeSDwZmBuv+0nA1eVvQAfp+hynAPckZkHA38HXDJ64Uq19BLgtZn5\nwCDbveZqwBa9RkuU99+3uAvoiojTKeZH2KXf/rcCn42IFwA3Zea/R8Qry2OOL/eZ0uqgpZr7fmau\nH2K711wNmOg1Wp52jz4iTgQCmE3Ruv9Ov53vjIh9gDcA10fEOcAGiq7Db41a1FK9bRikfLuG7V5z\n45xd92qXXYFfZuZm4Ehg+8aNEfEuYHpmfhG4FNgLuB94U7n9RRHxntENWaq1voiYEhFTKK438Jqr\nBVv0apcvA7dFxCuAzwG/iojzG7Y/BNwcEaspBuOdDKwFrouIJcAk4MxRjlmqs89SJPYf89SjsJfj\nNTfuOQWuJEk1Zte9JEk1ZqKXJKnGTPSSJNWYiV6SpBoz0UuSVGM+XidNIBHxMHB8Zt67Dce8DXgf\nxaxo21GsRHhGZi6PiIuBRzLzf2/D+f4dOBB4XRnLIdX/AknbykQvaVAR8SLg08B+mflwREwCPkkx\n98FhmXnetp4zM/coz93UWCUNzEQvTVARcQxwAcVEKBuBMzPz7n67vRj4dWY+DJCZmyLiH4AdynNc\nBzyUmR8tewsuoZjcaBbFIigHA4cB3cDrMrMnIvqA5/aL5VkUqxnuDvwxcHlm/lO57WGKHxbHAYdm\n5n8057+ANDF4j16auK4CXp+ZLwTOAN44wD5Lgf8REbdFxF9HxPTMXJeZqwY5556Z+XLgI8ANwM3A\n8yn+rTlyiFg+SDEl8h4UPw4ujojGHwPPycwwyUvbzkQvTVwrgXdExG6ZeW9m/sE85pm5HNgXWAF8\nBuiOiMUR8b8GOedXyvcfAOsy8+7M7AN+BDx7iFjOBN5d1vkL4DHgeQ3bv7oNf5ekBiZ6aeJ6IzAD\neCAivhsRBw60U2b+NDPfnpnPBfYEHgW+HhED/fuxpnzfBDzRUL6J4hbBYPYBFkXEz8rBejN5+r9P\ng/UgSNoKE700QWXmzzPzZOCZwGXAjf33iYi9omHUXGb+BHgXRet8ehPD+QKwEHhB2X3f3cRzSxOa\niV6agCKiKyL+NSJ2KpcKvg8YaIWr1wALysFyREQHcDzw48z8TRNDeibwQGb2RcSJwFRgxyaeX5qw\nHHUvTUCZ2R0RdwDLImITsAE4dYBdP0HR5X5X+WjddsD/B45ockgfAm6JiN8CV5evayLigCbXI004\nLlMrSVKN2XUvSVKNmeglSaoxE70kSTVmopckqcZM9JIk1ZiJXpKkGjPRS5JUYyZ6SZJq7L8B/RrY\n2WAFb5sAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8947c61c50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "##  Target Exploration\n",
    "is_sim = train_df['is_similar'].value_counts()\n",
    "\n",
    "plt.figure(figsize=(8,4))\n",
    "sns.barplot(is_sim.index, is_sim.values, alpha=0.8, color=color[1])\n",
    "plt.ylabel('Number of Occurrences', fontsize=12)\n",
    "plt.xlabel('Is Similar', fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True     0.753035\n",
       "False    0.246965\n",
       "Name: is_similar, dtype: float64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "is_sim/is_sim.sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "all_ques_df = pd.DataFrame(pd.concat([train_df['question1'], train_df['question2']]))\n",
    "all_ques_df.columns =[\"questions\"]\n",
    "\n",
    "all_ques_df[\"num_of_words\"] = all_ques_df[\"questions\"].apply(lambda x: len(str(x).split()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAtkAAAF2CAYAAAC774Q4AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3XmYXGWd9vFvTEDZhAQCRPQFHJwfg6iDC4gsAUVFRVGQ\nRZbIgCjjChJ9wVE0MIo6UWEERyOMEhZfJYisggMTI7LjOCyKP0ERhQQSJMRAMGbp949zGipNd/VJ\ncqpPVfh+rquvrjqnqs6d7k5y19PPec6ovr4+JEmSJNXnOU0HkCRJktY0lmxJkiSpZpZsSZIkqWaW\nbEmSJKlmlmxJkiSpZmOaDtAJ8+YtdMkUSZIkddT48RuMGmqfI9mSJElSzSzZkiRJUs1GZLpIRGwP\nXAJ8LTPPiIgXAecCo4E5wOGZuTgiDgWOBZYD0zLz7IhYC/gusCWwDPinzPz9SOSWJEmSVkXHR7Ij\nYj3g68C1LZtPBs7MzN2Ae4Ejy8edBOwF7AEcFxHjgEOAxzJzV+DzwKmdzixJkiStjpGYLrIYeCsw\nu2XbHsCl5e3LKIr1TsCtmbkgM58Ergd2Ad4AXFw+9ppymyRJktS1Oj5dJDOXAksjonXzepm5uLw9\nF5gAbA7Ma3nMM7Zn5vKI6IuItTPzb0Mdc+zYdRkzZnSNfwpJkiSpum5Ywm+opU9WdvtT5s9ftOpp\nJEmSpArGj99gyH1NrS7yeESsU97egmIqyWyKUWuG2l6eBDmq3Si2JEmS1LSmSvY1wP7l7f2Bq4Cb\ngddExEYRsT7F3OvrgJ8AB5SPfTswc4SzSpIkSStlVF9fZy+OGBGvAr4CbAUsAR4EDqVYlu95wP0U\ny/ItiYh3A58A+oCvZ+b5ETEaOAt4CcVJlEdk5p/aHdMrPkqSJKnT2l3xseMluwmWbEmSJHWal1WX\nJEmSRpAlW5IkSaqZJVuSJEmqmSVbkiRJqlk3XIxGqt3U6bOajgDA5EkTm44gSZIa4Ei2JEmSVDNL\ntiRJklQzS7YkSZJUM0u2JEmSVDNLtiRJklQzS7YkSZJUM0u2JEmSVDNLtiRJklQzS7YkSZJUM0u2\nJEmSVDNLtiRJklQzS7YkSZJUM0u2JEmSVDNLtiRJklQzS7YkSZJUszFNB5CezaZOn9V0BAAmT5rY\ndARJktYojmRLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNk\nS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RL\nkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuS\nJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5Ik\nSTWzZEuSJEk1s2RLkiRJNRvTxEEjYn1gOjAWeC4wBfg1cC4wGpgDHJ6ZiyPiUOBYYDkwLTPPbiKz\nJEmSVFVTI9lHAJmZewLvBk4HTgbOzMzdgHuBIyNiPeAkYC9gD+C4iBjXSGJJkiSpoqZK9iPAxuXt\nseX9PYBLy22XURTrnYBbM3NBZj4JXA/sMrJRJUmSpJXTyHSRzPx/EXFERNxLUbLfBlyamYvLh8wF\nJgCbA/Nantq/va2xY9dlzJjRNadWL+mW7//48Ru03d8rOSVJ0sppak72YcAfM3PviHgFMHCe9agh\nnjrU9hXMn79odeJpDbB06bKmIwAwb97Ctvt7JackSXqmdoNUTU0X2QW4GiAzbwdeADwREeuU+7cA\nZpcfm7c8r3+7JEmS1LWaKtn3Usy3JiK2BB4H/gvYv9y/P3AVcDPwmojYqFyRZBfgupGPK0mSJFXX\nyHQR4FvAf0bErDLDMcDdwPSI+ABwP3BOZi6JiBMoRr37gCmZuaChzJIkSVIlTZ34+Dhw4CC73jjI\nY2cAMzoeSpIkSaqJV3yUJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJliRJkmpmyZYkSZJqZsmW\nJEmSatbUxWgk9ZCp02c1HQGAyZMmNh1BkqRKHMmWJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJ\nliRJkmpmyZYkSZJqZsmWJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJliRJkmpmyZYkSZJqZsmW\nJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJliRJkmpWqWRHxFott7eJiL/rXCRJkiSptw1bsiPi\nQ8D3y9v/DNwEXB0Rx3U4myRJktSTqoxkfxR4X3n7RODNwMtatkmSJElqMabCY/6WmY9GxA7A4sz8\nBUBEdDaZJEmS1KOqlOyFEXE4sD/wA4CI2A5Y0slgkiRJUq+qMl3kaODtwAPA58ttXwQ+0alQkiRJ\n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\np5EkSZLWAFVGsucD/wF8t+XCMaOAvszsjsvASZIkSV2kSsn+LHAQzsmW1OWmTp/VdAQmT5rYdARJ\nUheoUrJ/B/w4M5d3OowkSZK0JqhSsi8BLo2Iy4CFrTsy84KOpJIkSZJ6WJWSvXf5+eAB2/sAS7Yk\nSZI0wLAlOzP3HIkgkiRJ0pqiyhUfpw21LzPfX28cSZIkqfdVWSf7wQEfi4A9gLmdiyVJkiT1rirT\nRaYM3BYR/wqc05FEkiRJUo+rMpI9mD8D29YZRJIkSVpTVJmT/W2KlUT6jQa2B+7vVChJkiSpl1VZ\nwu+BAfeXATcAF9YfR5IkSep9qzQnW5IkSdLQhizZETGTFaeJDNSXmW+oP5IkSZLU29qNZH9uiO0T\nyn1r1x1GkiRJWhMMWbIzc1br/YhYGzge+DBwBvDVzkaTJEmSelOVEx+JiP2ALwOzgFdl5kMdTSVJ\nkiT1sLYlOyJeAZxe3j0gM3/Z+UiSJElSb2t34uO3gYnAiZl50chFkiRJknpbu5Hso8rPF0bEwFVG\nRlGsLjK6M7EkSZKk3tXuxMdVveS6JEmS9KxmkZYkSZJqZsmWJEmSambJliRJkmpmyZYkSZJqZsmW\nJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJliRJkmpmyZYk\nSZJqZsmWJEmSambJliRJkmpmyZYkSZJqNqbpAHra1Omzmo7A5EkTm44gSZLU8xzJliRJkmpmyZYk\nSZJqZsmWJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJliRJkmpmyZYkSZJqZsmWJEmSambJliRJ\nkmpmyZYkSZJqZsmWJEmSambJliRJkmo2pqkDR8SXgd3KDKcCtwLnAqOBOcDhmbk4Ig4FjgWWA9My\n8+yGIkuSJEmVNDKSHRF7Attn5s7A3sBpwMnAmZm5G3AvcGRErAecBOwF7AEcFxHjmsgsSZIkVdXU\ndJGfAQeUtx8D1qMo0ZeW2y6jKNY7Abdm5oLMfBK4HthlZKNKkiRJK6eR6SKZuQx4orx7FHAl8ObM\nXFxumwtMADYH5rU8tX+7JEmS1LUam5MNEBH7UpTsNwH3tOwaNcRThtq+grFj12XMmNGrmW7kdUPm\n8eM3GPYxvZCzGzKCOevWCzmr/B2SJK35mjzx8c3AvwB7Z+aCiHg8ItYpp4VsAcwuPzZvedoWwE3D\nvfb8+Ys6Ebnjli5d1nQE5s1bOOxjeiFnN2QEc9atF3JW+TskSVoztBtYaerExw2BfwP2ycxHy83X\nAPuXt/cHrgJuBl4TERtFxPoU87GvG+m8kiRJ0spoaiT7IGAT4AcR0b/tvcBZEfEB4H7gnMxcEhEn\nAFcDfcCUzFzQRGBJqsvU6bOajsDkSRObjiBJa7SmTnycBkwbZNcbB3nsDGBGx0NJkiRJNfGKj5Ik\nSVLNLNmSJElSzSzZkiRJUs0s2ZIkSVLNLNmSJElSzSzZkiRJUs0s2ZIkSVLNLNmSJElSzSzZkiRJ\nUs0s2ZIkSVLNLNmSJElSzSzZkiRJUs0s2ZIkSVLNLNmSJElSzSzZkiRJUs0s2ZIkSVLNLNmSJElS\nzSzZkiRJUs0s2ZIkSVLNLNmSJElSzSzZkiRJUs3GNB1AktSdpk6f1XQEJk+a2HQESVoljmRLkiRJ\nNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1\ns2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1s2RLkiRJNbNkS5IkSTWz\nZEuSJEk1s2RLkiRJNbNkS5IkSTWzZEuSJEk1G9N0AEmSVsfU6bOajsDkSRObjiCpyziSLUmSJNXM\nki1JkiTVzJItSZIk1cySLUmSJNXMki1JkiTVzJItSZIk1cySLUmSJNXMki1JkiTV7FlxMRovVCBJ\nkqSR5Ei2JEmSVDNLtiRJklSznpguEhFfA14L9AEfy8xbG44kSVJl3TBtEZy6KI2krh/JjoiJwEsy\nc2fgKODfG44kSZIktdX1JRt4A/AjgMy8GxgbEc9vNpIkSZI0tF6YLrI58IuW+/PKbX9pJo4kSWum\nXpnWYs7qqkwRMmd1KzPlalRfX18Ho6y+iJgGXJGZl5T3fw4cmZm/bTaZJEmSNLhemC4ym2Lkut8L\ngDkNZZEkSZKG1Qsl+yfAuwEi4pXA7Mxc2GwkSZIkaWhdP10EICK+COwOLAc+lJm3NxxJkiRJGlJP\nlGxJkiSpl/TCdBFJkiSpp1iyJUmSpJpZsiVJkqSaWbJXQkRs1HSGgSJi1CDbXthElqoiYpOmMwwn\nIl7fdIbhRMSYiNgyIrr+olK98D3vJYP9ve8WETEqIsZHxKZNZ5GkJnni40qIiP/OzK4oXxHxLuA0\n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\nh5wScMITAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8947bfbc18>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_str = all_ques_df[\"num_of_words\"].value_counts()\n",
    "\n",
    "plt.figure(figsize=(12,6))\n",
    "sns.barplot(count_str.index, count_str.values, alpha=0.8, color=color[0])\n",
    "plt.ylabel('Number of Occurrences', fontsize=12)\n",
    "plt.xlabel('Number of words in the question', fontsize=12)\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nex5h3AAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8947b89a58>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "all_ques_df[\"num_of_chars\"] = all_ques_df[\"questions\"].apply(lambda x: len(str(x)))\n",
    "count_str = all_ques_df[\"num_of_chars\"].value_counts()\n",
    "\n",
    "plt.figure(figsize=(12,6))\n",
    "sns.barplot(count_str.index, count_str.values, alpha=0.8, color=color[3])\n",
    "plt.ylabel('Number of Occurrences', fontsize=20)\n",
    "plt.xlabel('Number of characters in the question', fontsize=20)\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()      \n",
    "\n",
    "# del all_ques_df     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def get_unigrams(que):\n",
    "    return [word for word in word_tokenize(que.lower()) if word not in eng_stopwords]\n",
    "\n",
    "## Finding the intersection between two series in pandas and return len.\n",
    "def get_common_unigrams(row):\n",
    "    return len( set(row[\"unigrams_ques1\"]).intersection(set(row[\"unigrams_ques2\"])) ) \n",
    "\n",
    "def get_common_unigram_ratio(row):\n",
    "    return float(row[\"unigrams_common_count\"]) / max(len( set(row[\"unigrams_ques1\"]).union(set(row[\"unigrams_ques2\"])) ),1)\n",
    "\n",
    "train_df[\"unigrams_ques1\"] = train_df['question1'].apply(lambda x: get_unigrams(str(x)))\n",
    "train_df[\"unigrams_ques2\"] = train_df['question2'].apply(lambda x: get_unigrams(str(x)))\n",
    "train_df[\"unigrams_common_count\"] = train_df.apply(lambda row: get_common_unigrams(row), axis=1)\n",
    "train_df[\"unigrams_common_ratio\"] = train_df.apply(lambda row: get_common_unigram_ratio(row),axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAtMAAAF1CAYAAAAqWWZfAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3XucHXV9//FXSEINhEoSA0Hkp1jaDyKKoChyM1QsCCgt\niDcE/IEX/CEKFSm2igS8UOoFq7Q1QgVRLBJruQoWKohguIgK3j4CtSgQyFoCRgNhN8nvj5mFw5rd\nzJnNnMvu6/l47GPPmZmz5z27K77z3e98Z8qaNWuQJEmS1L4Nuh1AkiRJ6leWaUmSJKkmy7QkSZJU\nk2VakiRJqskyLUmSJNVkmZYkSZJqmtbtAOMxMLDcdf0kSZLUuLlzN5mytu2OTEuSJEk1WaYlSZKk\nmizTkiRJUk2WaUmSJKkmy7QkSZJUk2VakiRJqskyLUmSJNVkmZYkSZJqskxLkiRJNVmmJUmSpJos\n05IkSVJNlmlJkiSpJsu0JEmSVJNlWpIkSappWrcDSHX9+DsndTvCuG2/5+ndjiBJksbBkWlJkiSp\nJsu0JEmSVJNlWpIkSarJMi1JkiTVZJmWJEmSarJMS5IkSTVZpiVJkqSaLNOSJElSTZZpSZIkqSbL\ntCRJklSTZVqSJEmqyTItSZIk1WSZliRJkmqyTEuSJEk1WaYlSZKkmizTkiRJUk2WaUmSJKmmaZ14\nk4g4FDgRGAJOBm4HzgemAkuAwzJzZXncccBqYGFmntOJfJIkSVIdjY9MR8Qc4MPA7sABwIHAqcBZ\nmbkHcBdwZERsTFG09wbmA8dHxOym80mSJEl1dWJkem/g6sxcDiwH3hERvwSOLvdfCpwAJHBLZj4C\nEBE3ALuV+yVJkqSe04ky/Rxgo4i4BJgFnAJsnJkry/1LgS2AecBAy+uGt0uSJEk9qRNlegowB/gr\n4NnAt8ttrftHe92YZs3aiGnTpo47oPrTRPjZz527SbcjSJKkcehEmX4QuDEzh4C7I2I5MBQRMzLz\nUWBL4P7yY17L67YEFo/1hZctW9FQZPWDoaFV3Y4wbgMDy7sdQZIkVTDaAFgnlsb7FvDnEbFBeTHi\nTOBq4OBy/8HAlcBNwM4RsWlEzKSYL319B/JJkiRJtTRepjPzPmARxSjzN4FjKVb3OCIirgdmA+eV\no9QnAVdRlO0FwxcjSpIkSb1oypo1a7qdobaBgeX9G17j9uPvnNTtCOO2/Z6ndzuCJEmqYO7cTdZ6\nPZ93QJQkSZJqskxLkiRJNVmmJUmSpJos05IkSVJNlmlJkiSpJsu0JEmSVJNlWpIkSarJMi1JkiTV\nZJmWJEmSarJMS5IkSTVN63YASdVdsfjEbkcYl/12OaPbESRJWq8cmZYkSZJqskxLkiRJNVmmJUmS\npJos05IkSVJNlmlJkiSpJsu0JEmSVJNlWpIkSarJMi1JkiTVZJmWJEmSarJMS5IkSTVZpiVJkqSa\nLNOSJElSTZZpSZIkqSbLtCRJklSTZVqSJEmqyTItSZIk1WSZliRJkmqyTEuSJEk1WaYlSZKkmizT\nkiRJUk2WaUmSJKkmy7QkSZJUk2VakiRJqskyLUmSJNVkmZYkSZJqskxLkiRJNVmmJUmSpJos05Ik\nSVJNlmlJkiSppmlNv0FEzAcuAn5SbroDOAM4H5gKLAEOy8yVEXEocBywGliYmec0nU+SJEmqq1Mj\n09dl5vzy41jgVOCszNwDuAs4MiI2Bk4G9gbmA8dHxOwO5ZMkSZLa1q1pHvOBS8rHl1IU6JcBt2Tm\nI5n5KHADsFt34kmSJEnr1vg0j9J2EXEJMBtYAGycmSvLfUuBLYB5wEDLa4a3j2rWrI2YNm1qA3HV\nDybCz37u3E3aOn7a9P4+53bPV5KkXteJMn0nRYH+GvBc4Nsj3nfKKK8bbfsTli1bMe5w6l9DQ6u6\nHWHcBgaWt3X80GB/n3O75ytJUq8YbUCo8TKdmfcBF5ZP746IB4CdI2JGOZ1jS+D+8mNey0u3BBY3\nnU+SJEmqq/E50xFxaEScUD6eB2wOfBE4uDzkYOBK4CaKkr1pRMykmC99fdP5JEmSpLo6Mc3jEuCC\niDgQ2BB4F/AD4EsR8U7gHuC8zByMiJOAq4A1wILMfKQD+SRJkqRaOjHNYznwmrXsetVajl0ELGo6\nkyRJkrQ+eAdESZIkqSbLtCRJklSTZVqSJEmqyTItSZIk1WSZliRJkmqyTEuSJEk1WaYlSZKkmizT\nkiRJUk2WaUmSJKmmSmU6Iqa3PN4mIv6kuUiSJElSf1hnmY6IY4ALy8fvAhYDV0XE8Q1nkyRJknpa\nlZHp9wBvKx9/ANgHeEHLNkmSJGlSmlbhmMcz86GI2BFYmZnfB4iIZpNJkiRJPa5KmV4eEYcBBwNf\nA4iI7YDBJoNJkiRJva7KNI+3A68B7gU+Wm47HXh/U6EkSZKkfrDOkenM/Anw+oiYAswBVmTmaxtP\n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\nVJNlWpIkSarJMi1JkiTVZJmWJEmSarJMS5IkSTVZpiVJkqSaLNOSJElSTZZpSZIkqSbLtCRJklST\nZVqSJEmqyTItSZIk1WSZliRJkmqyTEuSJEk1WaYlSZKkmizTkiRJUk2WaUmSJKkmy7QkSZJUk2Va\nkiRJqskyLUmSJNVkmZYkSZJqskxLkiRJNVmmJUmSpJos05IkSVJNlmlJkiSpJsu0JEmSVJNlWpIk\nSarJMi1JkiTVZJmWJEmSarJMS5IkSTVZpiVJkqSaLNOSJElSTZZpSZIkqaZpnXiTiNgeuBj4dGZ+\nLiK2As4HpgJLgMMyc2VEHAocB6wGFmbmOZ3IJ0mSJNXR+Mh0RGwMfBa4pmXzqcBZmbkHcBdwZHnc\nycDewHzg+IiY3XQ+SZIkqa5OjEyvBPYD/qZl23zg6PLxpcAJQAK3ZOYjABFxA7BbuV+SJo1Tbruy\n2xHG5ZSd9u12BEnqmMbLdGYOAUMR0bp548xcWT5eCmwBzAMGWo4Z3i5JkiT1pI7MmV6HKW1uf8Ks\nWRsxbdrU9RynP62c3v/Xks6du0lbx0+En33b5zy9v8+53fMFmD6tv3+365zztEl4zpLUr7pVpn8X\nETMy81FgS+D+8mNeyzFbAovH+iLLlq1oLmGfGRxc3e0I4zYwsLyt44eGVjWUpHPaPufB/j7nds8X\nYHCov3+365zz0CQ8Z0nqdaMNFHRr+ONq4ODy8cHAlcBNwM4RsWlEzKSYL319l/JJkiRJ69T4yHRE\nvBj4JPAcYDAiXgccCpwbEe8E7gHOy8zBiDgJuApYAywYvhixbddcux6Sd9kr53c7gSRJktahExcg\nfp9i9Y6RXrWWYxcBi5rOJEmSJK0P/X2ViyRJktRFlmlJkiSpJsu0JEmSVJNlWpIkSarJMi1JkiTV\nZJmWJEmSarJMS5IkSTVZpiVJkqSaLNOSJElSTZZpSZIkqSbLtCRJklSTZVqSJEmqyTItSZIk1WSZ\nliRJkmqyTEuSJEk1WaYlSZKkmizTkiRJUk2WaUmSJKkmy7QkSZJUk2VakiRJqskyLUmSJNVkmZYk\nSZJqskxLkiRJNVmmJUmSpJos05IkSVJNlmlJkiSpJsu0JEmSVJNlWpIkSarJMi1JkiTVNK3bASRJ\nk9up37+l2xHG7eQX79ztCJK6xJFpSZIkqSbLtCRJklSTZVqSJEmqyTItSZIk1WSZliRJkmqyTEuS\n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\nNtkAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8947bdce80>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_str = train_df[\"unigrams_common_count\"].value_counts()\n",
    "\n",
    "plt.figure(figsize=(12,6))\n",
    "sns.barplot(count_str.index, count_str.values, alpha=0.8)\n",
    "plt.ylabel('Number of Occurrences', fontsize=12)\n",
    "plt.xlabel('Common unigrams count', fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n6KA4AwBAh/8PEpvOUvEeaxsAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8944737da0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "sns.boxplot(x=\"is_similar\", y=\"unigrams_common_count\", data=train_df)\n",
    "plt.xlabel('Is similar', fontsize=12)\n",
    "plt.ylabel('Common unigrams count', fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8943eacfd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "sns.boxplot(x=\"is_similar\", y=\"unigrams_common_ratio\", data=train_df)\n",
    "plt.xlabel('Is similar', fontsize=12)\n",
    "plt.ylabel('Common unigrams ratio', fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def get_bigrams(que):\n",
    "    return [ i for i in ngrams(que,2)]\n",
    "\n",
    "def get_common_bigrams(row):\n",
    "    return len( set(row['bigrams_ques1']).intersection(set(row['bigrams_ques2'])) )\n",
    "\n",
    "def get_common_bigram_ratio(row):\n",
    "    return float(row[\"bigrams_common_count\"]) / max(len( set(row[\"bigrams_ques1\"]).union(set(row[\"bigrams_ques2\"])) ),1)\n",
    "\n",
    "train_df[\"bigrams_ques1\"] = train_df[\"unigrams_ques1\"].apply(lambda x: get_bigrams(x))\n",
    "train_df[\"bigrams_ques2\"] = train_df[\"unigrams_ques2\"].apply(lambda x: get_bigrams(x))\n",
    "train_df[\"bigrams_common_count\"] = train_df.apply(lambda row: get_common_bigrams(row), axis=1)\n",
    "train_df[\"bigrams_common_ratio\"] = train_df.apply(lambda row: get_common_bigram_ratio(row), axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8943e142e8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_str = train_df['bigrams_common_count'].value_counts()\n",
    "\n",
    "plt.figure(figsize=(12,6))\n",
    "sns.barplot(count_str.index, count_str.values, alpha=0.8)\n",
    "plt.ylabel('Number of Occurrences', fontsize=12)\n",
    "plt.xlabel('Common bigrams count', fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f89443e9438>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_str = train_df['bigrams_common_ratio'].value_counts()\n",
    "\n",
    "plt.figure(figsize=(12,6))\n",
    "sns.barplot(count_str.index, count_str.values, alpha=0.8)\n",
    "plt.ylabel('Number of Occurrences', fontsize=10)\n",
    "plt.xlabel('Common bigrams ratio', fontsize=10)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f89443e9da0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "sns.boxplot(x=\"is_similar\", y=\"bigrams_common_count\", data=train_df)\n",
    "plt.xlabel('Is similar', fontsize=12)\n",
    "plt.ylabel('Common bigrams count', fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n7bLkJjw9yAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8943eb3fd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "sns.boxplot(x=\"is_similar\", y=\"bigrams_common_ratio\", data=train_df)\n",
    "plt.xlabel('Is similar', fontsize=12)\n",
    "plt.ylabel('Common bigrams ratio', fontsize=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def feature_extraction(row):\n",
    "    que1 = str(row['question1'])\n",
    "    que2 = str(row['question2'])\n",
    "    out_list = []\n",
    "    # get unigram features #\n",
    "    unigrams_que1 = [word for word in que1.lower().split() if word not in eng_stopwords]\n",
    "    unigrams_que2 = [word for word in que2.lower().split() if word not in eng_stopwords]\n",
    "    common_unigrams_len = len(set(unigrams_que1).intersection(set(unigrams_que2)))\n",
    "    common_unigrams_ratio = float(common_unigrams_len) / max(len(set(unigrams_que1).union(set(unigrams_que2))),1)\n",
    "    out_list.extend([common_unigrams_len, common_unigrams_ratio])\n",
    "    \n",
    "    # get bigram features #\n",
    "    bigrams_que1 = [i for i in ngrams(unigrams_que1, 2)]\n",
    "    bigrams_que2 = [i for i in ngrams(unigrams_que2, 2)]\n",
    "    common_bigrams_len = len(set(bigrams_que1).intersection(set(bigrams_que2)))\n",
    "    common_bigrams_ratio = float(common_bigrams_len) / max(len(set(bigrams_que1).union(set(bigrams_que2))),1)\n",
    "    out_list.extend([common_bigrams_len, common_bigrams_ratio])\n",
    "    \n",
    "    # get trigram features #\n",
    "    trigrams_que1 = [i for i in ngrams(unigrams_que1, 3)]\n",
    "    trigrams_que2 = [i for i in ngrams(unigrams_que2, 3)]\n",
    "    common_trigrams_len = len(set(trigrams_que1).intersection(set(trigrams_que2)))\n",
    "    common_trigrams_ratio = float(common_trigrams_len) / max(len(set(trigrams_que1).union(set(trigrams_que2))),1)\n",
    "    out_list.extend([common_trigrams_len, common_trigrams_ratio])\n",
    "    return out_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def runXGB(train_X, train_y, test_X, test_y=None, feature_names=None, seed_val=0):\n",
    "        params = {}\n",
    "        params[\"objective\"] = \"binary:logistic\"\n",
    "        params['eval_metric'] = 'logloss'\n",
    "        params[\"eta\"] = 0.02\n",
    "        params[\"subsample\"] = 0.7\n",
    "        params[\"min_child_weight\"] = 1\n",
    "        params[\"colsample_bytree\"] = 0.7\n",
    "        params[\"max_depth\"] = 4\n",
    "        params[\"silent\"] = 1\n",
    "        params[\"seed\"] = seed_val\n",
    "        num_rounds = 300 \n",
    "        plst = list(params.items())\n",
    "        xgtrain = xgb.DMatrix(train_X, label=train_y)\n",
    "\n",
    "        if test_y is not None:\n",
    "                xgtest = xgb.DMatrix(test_X, label=test_y)\n",
    "                watchlist = [ (xgtrain,'train'), (xgtest, 'test') ]\n",
    "                model = xgb.train(plst, xgtrain, num_rounds, watchlist, early_stopping_rounds=100, verbose_eval=10)\n",
    "        else:\n",
    "                xgtest = xgb.DMatrix(test_X)\n",
    "                model = xgb.train(plst, xgtrain, num_rounds)\n",
    "                \n",
    "        pred_test_y = model.predict(xgtest)\n",
    "\n",
    "        loss = 1\n",
    "        if test_y is not None:\n",
    "                loss = log_loss(test_y, pred_test_y)\n",
    "                return pred_test_y, loss, model\n",
    "        else:\n",
    "            return pred_test_y, loss, modelv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/bin/ipython:21: DeprecationWarning: generator 'ngrams' raised StopIteration\n",
      "/opt/conda/bin/ipython:20: DeprecationWarning: generator 'ngrams' raised StopIteration\n"
     ]
    }
   ],
   "source": [
    "train_X = np.vstack( np.array(train_df.apply(lambda row: feature_extraction(row), axis=1)) ) \n",
    "test_X = np.vstack( np.array(test_df.apply(lambda row: feature_extraction(row), axis=1)) )\n",
    "train_y = np.array(train_df[\"is_similar\"])\n",
    "test_id = np.array(test_df[\"test_id\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean target rate :  0.5040625\n"
     ]
    }
   ],
   "source": [
    "train_X_similar = train_X[train_y==1]\n",
    "train_X_non_similar = train_X[train_y==0]\n",
    "\n",
    "train_X = np.vstack([train_X_non_similar, train_X_similar, train_X_non_similar, train_X_non_similar])\n",
    "train_y = np.array([0]*train_X_non_similar.shape[0] + [1]*train_X_similar.shape[0] + [0]*train_X_non_similar.shape[0] + [0]*train_X_non_similar.shape[0])\n",
    "del train_X_similar\n",
    "del train_X_non_similar\n",
    "print(\"Mean target rate : \",train_y.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\ttrain-logloss:0.691483\ttest-logloss:0.691145\n",
      "Multiple eval metrics have been passed: 'test-logloss' will be used for early stopping.\n",
      "\n",
      "Will train until test-logloss hasn't improved in 100 rounds.\n",
      "[10]\ttrain-logloss:0.66482\ttest-logloss:0.665453\n",
      "[20]\ttrain-logloss:0.643468\ttest-logloss:0.645061\n",
      "[30]\ttrain-logloss:0.624858\ttest-logloss:0.629388\n",
      "[40]\ttrain-logloss:0.612544\ttest-logloss:0.618438\n",
      "[50]\ttrain-logloss:0.601257\ttest-logloss:0.608913\n",
      "[60]\ttrain-logloss:0.59035\ttest-logloss:0.599993\n",
      "[70]\ttrain-logloss:0.580631\ttest-logloss:0.592579\n",
      "[80]\ttrain-logloss:0.574185\ttest-logloss:0.587856\n",
      "[90]\ttrain-logloss:0.56935\ttest-logloss:0.584218\n",
      "[100]\ttrain-logloss:0.563939\ttest-logloss:0.580435\n",
      "[110]\ttrain-logloss:0.558397\ttest-logloss:0.577037\n",
      "[120]\ttrain-logloss:0.554203\ttest-logloss:0.574323\n",
      "[130]\ttrain-logloss:0.551484\ttest-logloss:0.572361\n",
      "[140]\ttrain-logloss:0.548075\ttest-logloss:0.570161\n",
      "[150]\ttrain-logloss:0.54526\ttest-logloss:0.56847\n",
      "[160]\ttrain-logloss:0.54311\ttest-logloss:0.567252\n",
      "[170]\ttrain-logloss:0.540439\ttest-logloss:0.566306\n",
      "[180]\ttrain-logloss:0.538168\ttest-logloss:0.565591\n",
      "[190]\ttrain-logloss:0.536289\ttest-logloss:0.56485\n",
      "[200]\ttrain-logloss:0.534846\ttest-logloss:0.564355\n",
      "[210]\ttrain-logloss:0.533176\ttest-logloss:0.564028\n",
      "[220]\ttrain-logloss:0.531807\ttest-logloss:0.563818\n",
      "[230]\ttrain-logloss:0.529944\ttest-logloss:0.563415\n",
      "[240]\ttrain-logloss:0.528607\ttest-logloss:0.563328\n",
      "[250]\ttrain-logloss:0.527557\ttest-logloss:0.563269\n",
      "[260]\ttrain-logloss:0.526324\ttest-logloss:0.56295\n",
      "[270]\ttrain-logloss:0.525165\ttest-logloss:0.562971\n",
      "[280]\ttrain-logloss:0.524215\ttest-logloss:0.562899\n",
      "[290]\ttrain-logloss:0.523127\ttest-logloss:0.562644\n",
      "[299]\ttrain-logloss:0.5224\ttest-logloss:0.562841\n"
     ]
    }
   ],
   "source": [
    "kf = KFold(n_splits=5, shuffle=True, random_state=2016)\n",
    "for dev_index, val_index in kf.split(range(train_X.shape[0])):\n",
    "    dev_X, val_X = train_X[dev_index,:], train_X[val_index,:]\n",
    "    dev_y, val_y = train_y[dev_index], train_y[val_index]\n",
    "    preds, lloss, model = runXGB(dev_X, dev_y, val_X, val_y)\n",
    "    break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "xgtest = xgb.DMatrix(test_X)\n",
    "preds = model.predict(xgtest)\n",
    "\n",
    "out_df = pd.DataFrame({\"test_id\":test_id, \"is_similar\":preds})\n",
    "out_df.to_csv(\"issimilar_predicted.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
